"""Se agregan tablas y se corrige error entre partido y Set

Revision ID: 06f8a5ecefcf
Revises: 
Create Date: 2025-06-15 02:24:26.072618

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '06f8a5ecefcf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Asociacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('ciudad', sa.String(), nullable=False),
    sa.Column('pais', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Asociacion_id'), 'Asociacion', ['id'], unique=False, schema='test_schema')
    op.create_table('Categoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('edad_Min', sa.Integer(), nullable=True),
    sa.Column('edad_Max', sa.Integer(), nullable=True),
    sa.Column('genero', sa.String(), nullable=False),
    sa.Column('set_por_partido', sa.Integer(), nullable=True),
    sa.Column('puntos_por_set', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Categoria_id'), 'Categoria', ['id'], unique=False, schema='test_schema')
    op.create_table('Torneo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fecha_Inscripcion', sa.Date(), nullable=False),
    sa.Column('competencia', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Torneo_id'), 'Torneo', ['id'], unique=False, schema='test_schema')
    op.create_table('Fase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(), nullable=False),
    sa.Column('Torneo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Torneo_id'], ['test_schema.Torneo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Fase_id'), 'Fase', ['id'], unique=False, schema='test_schema')
    op.create_table('Jugador',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('fecha_nacimiento', sa.Date(), nullable=False),
    sa.Column('genero', sa.String(), nullable=False),
    sa.Column('pais', sa.String(), nullable=False),
    sa.Column('ciudad', sa.String(), nullable=False),
    sa.Column('asociacion_id', sa.Integer(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['asociacion_id'], ['test_schema.Asociacion.id'], ),
    sa.ForeignKeyConstraint(['categoria_id'], ['test_schema.Categoria.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Jugador_id'), 'Jugador', ['id'], unique=False, schema='test_schema')
    op.create_table('Mesa',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Torneo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Torneo_id'], ['test_schema.Torneo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_table('torneo_categoria',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.Column('torneo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['test_schema.Categoria.id'], ),
    sa.ForeignKeyConstraint(['torneo_id'], ['test_schema.Torneo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_torneo_categoria_id'), 'torneo_categoria', ['id'], unique=False, schema='test_schema')
    op.create_table('Equipo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('jugador_id', sa.Integer(), nullable=True),
    sa.Column('jugador2_id', sa.Integer(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['test_schema.Categoria.id'], ),
    sa.ForeignKeyConstraint(['jugador2_id'], ['test_schema.Jugador.id'], ),
    sa.ForeignKeyConstraint(['jugador_id'], ['test_schema.Jugador.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Equipo_id'), 'Equipo', ['id'], unique=False, schema='test_schema')
    op.create_table('Partido',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('horario', sa.Time(), nullable=False),
    sa.Column('resultado', sa.String(), nullable=False),
    sa.Column('equipo1_id', sa.Integer(), nullable=True),
    sa.Column('equipo2_id', sa.Integer(), nullable=True),
    sa.Column('jugador1_id', sa.Integer(), nullable=True),
    sa.Column('jugador2_id', sa.Integer(), nullable=True),
    sa.Column('categoria_id', sa.Integer(), nullable=True),
    sa.Column('mesa_id', sa.Integer(), nullable=True),
    sa.Column('fase_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['test_schema.Categoria.id'], ),
    sa.ForeignKeyConstraint(['equipo1_id'], ['test_schema.Equipo.id'], ),
    sa.ForeignKeyConstraint(['equipo2_id'], ['test_schema.Equipo.id'], ),
    sa.ForeignKeyConstraint(['fase_id'], ['test_schema.Fase.id'], ),
    sa.ForeignKeyConstraint(['jugador1_id'], ['test_schema.Jugador.id'], ),
    sa.ForeignKeyConstraint(['jugador2_id'], ['test_schema.Jugador.id'], ),
    sa.ForeignKeyConstraint(['mesa_id'], ['test_schema.Mesa.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Partido_id'), 'Partido', ['id'], unique=False, schema='test_schema')
    op.create_table('Set',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_Set', sa.Integer(), nullable=False),
    sa.Column('puntos_Jugador1', sa.Integer(), nullable=False),
    sa.Column('puntos_Jugador2', sa.Integer(), nullable=False),
    sa.Column('partido_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['partido_id'], ['test_schema.Partido.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='test_schema'
    )
    op.create_index(op.f('ix_test_schema_Set_id'), 'Set', ['id'], unique=False, schema='test_schema')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_test_schema_Set_id'), table_name='Set', schema='test_schema')
    op.drop_table('Set', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_Partido_id'), table_name='Partido', schema='test_schema')
    op.drop_table('Partido', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_Equipo_id'), table_name='Equipo', schema='test_schema')
    op.drop_table('Equipo', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_torneo_categoria_id'), table_name='torneo_categoria', schema='test_schema')
    op.drop_table('torneo_categoria', schema='test_schema')
    op.drop_table('Mesa', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_Jugador_id'), table_name='Jugador', schema='test_schema')
    op.drop_table('Jugador', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_Fase_id'), table_name='Fase', schema='test_schema')
    op.drop_table('Fase', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_Torneo_id'), table_name='Torneo', schema='test_schema')
    op.drop_table('Torneo', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_Categoria_id'), table_name='Categoria', schema='test_schema')
    op.drop_table('Categoria', schema='test_schema')
    op.drop_index(op.f('ix_test_schema_Asociacion_id'), table_name='Asociacion', schema='test_schema')
    op.drop_table('Asociacion', schema='test_schema')
    # ### end Alembic commands ###
